apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka3
  labels:
    app: kafka3
spec:
  replicas: {{ .Values.kafka3.replicas }}
  selector:
    matchLabels:
      app: kafka3
  template:
    metadata:
      labels:
        app: kafka3
    spec:
      containers:
        - name: kafka3
          image: {{ .Values.kafka3.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9094
            - containerPort: 29096
            - containerPort: 29093
            - containerPort: 5556
          env:
            - name: KAFKA_NODE_ID
              value: "3"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka3:29096,PLAINTEXT_HOST://localhost:9094"
            - name: KAFKA_LISTENERS
              value: "CONTROLLER://0.0.0.0:29093,PLAINTEXT://0.0.0.0:29096,PLAINTEXT_HOST://0.0.0.0:9094"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka1:29093,2@kafka2:29093,3@kafka3:29093"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: CLUSTER_ID
              value: "ciWo7IWazngRchmPES6q5A=="
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "2"